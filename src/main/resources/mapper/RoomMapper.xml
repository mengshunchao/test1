<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxt.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="com.sxt.domain.Room">
    <id column="roomid" jdbcType="INTEGER" property="roomid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="hotelId" jdbcType="INTEGER" property="hotelid" />
     <!-- 添加数据表格字段 -->
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="typename" property="typename" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    roomid, type, price, info, hotelId
  </sql>
  <select id="selectByExample" parameterType="com.sxt.domain.RoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where roomid = #{roomid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where roomid = #{roomid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sxt.domain.RoomExample">
    delete from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sxt.domain.Room">
    insert into room (roomid, type, price, 
      info, hotelId)
    values (#{roomid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{info,jdbcType=VARCHAR}, #{hotelid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sxt.domain.Room">
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomid != null">
        roomid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="hotelid != null">
        hotelId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="hotelid != null">
        #{hotelid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sxt.domain.RoomExample" resultType="java.lang.Long">
    select count(*) from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update room
    <set>
      <if test="record.roomid != null">
        roomid = #{record.roomid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.hotelid != null">
        hotelId = #{record.hotelid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update room
    set roomid = #{record.roomid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      info = #{record.info,jdbcType=VARCHAR},
      hotelId = #{record.hotelid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxt.domain.Room">
    update room
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="hotelid != null">
        hotelId = #{hotelid,jdbcType=INTEGER},
      </if>
    </set>
    where roomid = #{roomid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxt.domain.Room">
    update room
    set type = #{type,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      info = #{info,jdbcType=VARCHAR},
      hotelId = #{hotelid,jdbcType=INTEGER}
    where roomid = #{roomid,jdbcType=INTEGER}
  </update>
  <!-- 全查询所有房间 -->
  <select id="queryAllHotelRooms" resultMap="BaseResultMap">
    select t1.*,t2.name,t2.address,t2.mobile,t3.typename from room t1 inner join hotel t2
    on t1.hotelid = t2.id left join type_room t3 on t1.type = t3.typeid
    <where>
    	<if test="name!=null and name!=''">
			and name like concat("%",#{name},"%")
		</if>
    </where>
  </select>
</mapper>